<?xml version="1.0" encoding="utf-8"?>
<!--
navigation 태그 아래에 fragment 태그가 3개 있다.
fragment는 우리가 순환할 화면이다.
name을 보면 위에서 생성한 LondonScreen , ParisScreen, ItalyScreen이 설정되어 있다.

navigation 태그에 startDestination 속성이 있는데 처음 보여질 화면이 어떤 것인지를 의미.
여기서는 london_screen으로 설정되어 있기 때문에 처음 보이는 화면이 LondonScreen이다.
-->
<navigation xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    app:startDestination="@+id/london_screen">

    <fragment
        android:id="@+id/london_screen"
        android:name="com.example.navigationtest.LondonScreen"
        android:label="London screen"
        tools:layout="@layout/fragment_london_screen">
        <!--
        화면이동을 하려면 그래프에서 화면 이동 관계를 설정해야 한다.
        Design버튼을 눌러 이동 관계를 설정한다.
        이렇게 설정하면 Text에 fragment 태그 아래에 action 코드들이 자동 삽입된 것을 볼 수 있다.
        action에는 id와 이동하려는 화면을 의미하는 destination이 정의되어 있다.
        -->
        <!--

       <action
           android:id="@+id/action_london_screen_to_paris_screen"
           app:destination="@id/paris_screen"
           app:popEnterAnim="@anim/slide_in_left"
           app:popExitAnim="@anim/slide_out_right"
           app:enterAnim="@anim/slide_in_right"
           app:exitAnim="@anim/slide_out_left"/>

       enterAnim : action을 수행할 때 이동할 화면(destination)에 대한 애니메이션이다.
       exitAnim : action을 수행할 때 현재 화면에 대한 애니메이션
       popExitAnim : 지난 화면으로 돌아갈 때(pop) 종료되는 화면에 대한 애니메이션
       popEnterAnim : 지난 화면으로 돌아갈 때 이동할 화면에 대한 애니메이션
       -->
    </fragment>

    <fragment
        android:id="@+id/paris_screen"
        android:name="com.example.navigationtest.ParisScreen"
        android:label="Paris screen"
        tools:layout="@layout/fragment_paris_screen">
    </fragment>

    <fragment
        android:id="@+id/italy_screen"
        android:name="com.example.navigationtest.ItalyScreen"
        android:label="Italy screen"
        tools:layout="@layout/fragment_italy_screen">
    </fragment>

    <!--
    Global Action
    nav_graph.xml에는 중복된 Action들이 3개나 있다.
    이걸 깔끔하게 정리하는 법.
    Global action은 말 그대로 Global로 action을 정의해서 여러 객체에 공통으로 사용하는 것이다.

    생성하는 방법은 코드로 할 수 있고, 그래프 에디터로도 할 수 있다.
    왼쪽 하단 Design버튼을 누르면 그래프 에디터가 실행된다. View를 클릭한 상태에서
    우클릭->ADD Action->Global을 누르면 Global action이 생성된다.

    3개의 fragment의 Global action을 모두 생성하고 xml을 열어보면 navigation 태그 하위에
    Global action 코드가 생성된다.
    <action android:id="@+id/action_global_london_screen"
        app:destination="@id/london_screen"/>

    <action android:id="@+id/action_global_paris_screen"
            app:destination="@id/paris_screen"/>

    <action android:id="@+id/action_global_italy_screen"
            app:destination="@id/italy_screen"/>

    기존에 생성한 Fragment 내의 Action을 모두 삭제하고, Global action에 애니메이션을 추가하면된다.

    Local action을 모두 삭제하고, Global action을 생성했기 때문에 Fragment 코드도 변경해줘야 한다.
    아래 코드처럼 Fragment에서 사용한 Local action을 모두 Global action으로 변경한다.
    -->
    <action android:id="@+id/action_global_london_screen"
        app:destination="@id/london_screen"
        app:popEnterAnim="@anim/slide_in_left"
        app:popExitAnim="@anim/slide_out_right"
        app:enterAnim="@anim/slide_in_right"
        app:exitAnim="@anim/slide_out_left"/>
    <action android:id="@+id/action_global_paris_screen"
        app:destination="@id/paris_screen"
        app:popEnterAnim="@anim/slide_in_left"
        app:popExitAnim="@anim/slide_out_right"
        app:enterAnim="@anim/slide_in_right"
        app:exitAnim="@anim/slide_out_left"/>
    <action android:id="@+id/action_global_italy_screen"
        app:destination="@id/italy_screen"
        app:popEnterAnim="@anim/slide_in_left"
        app:popExitAnim="@anim/slide_out_right"
        app:enterAnim="@anim/slide_in_right"
        app:exitAnim="@anim/slide_out_left"/>

</navigation>